//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;

namespace NMF.SynchronizationsBenchmark.Runtime
{
    
    
    /// <summary>
    /// The default implementation of the PerformRuleResult class
    /// </summary>
    [XmlNamespaceAttribute("platform:/plugin/org.moflon.tgg.runtime/model/Runtime.ecore")]
    [XmlNamespacePrefixAttribute("org.moflon.tgg.runtime")]
    [ModelRepresentationClassAttribute("platform:/plugin/org.moflon.tgg.runtime/model/Runtime.ecore#//PerformRuleResult/")]
    public class PerformRuleResult : TGGRuleMorphism, IPerformRuleResult, IModelElement
    {
        
        /// <summary>
        /// The backing field for the TranslatedElements property
        /// </summary>
        private ObservableAssociationOrderedSet<IModelElement> _translatedElements;
        
        /// <summary>
        /// The backing field for the CreatedElements property
        /// </summary>
        private ObservableAssociationOrderedSet<IModelElement> _createdElements;
        
        /// <summary>
        /// The backing field for the CreatedLinkElements property
        /// </summary>
        private ObservableAssociationOrderedSet<IModelElement> _createdLinkElements;
        
        /// <summary>
        /// The backing field for the CreatedEdges property
        /// </summary>
        private ObservableAssociationOrderedSet<IEMoflonEdge> _createdEdges;
        
        /// <summary>
        /// The backing field for the TranslatedEdges property
        /// </summary>
        private ObservableAssociationOrderedSet<IEMoflonEdge> _translatedEdges;
        
        private static IClass _classInstance;
        
        public PerformRuleResult()
        {
            this._translatedElements = new ObservableAssociationOrderedSet<IModelElement>();
            this._translatedElements.CollectionChanging += this.TranslatedElementsCollectionChanging;
            this._translatedElements.CollectionChanged += this.TranslatedElementsCollectionChanged;
            this._createdElements = new ObservableAssociationOrderedSet<IModelElement>();
            this._createdElements.CollectionChanging += this.CreatedElementsCollectionChanging;
            this._createdElements.CollectionChanged += this.CreatedElementsCollectionChanged;
            this._createdLinkElements = new ObservableAssociationOrderedSet<IModelElement>();
            this._createdLinkElements.CollectionChanging += this.CreatedLinkElementsCollectionChanging;
            this._createdLinkElements.CollectionChanged += this.CreatedLinkElementsCollectionChanged;
            this._createdEdges = new ObservableAssociationOrderedSet<IEMoflonEdge>();
            this._createdEdges.CollectionChanging += this.CreatedEdgesCollectionChanging;
            this._createdEdges.CollectionChanged += this.CreatedEdgesCollectionChanged;
            this._translatedEdges = new ObservableAssociationOrderedSet<IEMoflonEdge>();
            this._translatedEdges.CollectionChanging += this.TranslatedEdgesCollectionChanging;
            this._translatedEdges.CollectionChanged += this.TranslatedEdgesCollectionChanged;
        }
        
        /// <summary>
        /// The translatedElements property
        /// </summary>
        [LowerBoundAttribute(1)]
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Content)]
        [XmlElementNameAttribute("translatedElements")]
        [XmlAttributeAttribute(true)]
        [ConstantAttribute()]
        public virtual IOrderedSetExpression<IModelElement> TranslatedElements
        {
            get
            {
                return this._translatedElements;
            }
        }
        
        /// <summary>
        /// The createdElements property
        /// </summary>
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Content)]
        [XmlElementNameAttribute("createdElements")]
        [XmlAttributeAttribute(true)]
        [ConstantAttribute()]
        public virtual IOrderedSetExpression<IModelElement> CreatedElements
        {
            get
            {
                return this._createdElements;
            }
        }
        
        /// <summary>
        /// The createdLinkElements property
        /// </summary>
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Content)]
        [XmlElementNameAttribute("createdLinkElements")]
        [XmlAttributeAttribute(true)]
        [ConstantAttribute()]
        public virtual IOrderedSetExpression<IModelElement> CreatedLinkElements
        {
            get
            {
                return this._createdLinkElements;
            }
        }
        
        /// <summary>
        /// The createdEdges property
        /// </summary>
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Content)]
        [XmlElementNameAttribute("createdEdges")]
        [XmlAttributeAttribute(true)]
        [ConstantAttribute()]
        public virtual IOrderedSetExpression<IEMoflonEdge> CreatedEdges
        {
            get
            {
                return this._createdEdges;
            }
        }
        
        /// <summary>
        /// The translatedEdges property
        /// </summary>
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Content)]
        [XmlElementNameAttribute("translatedEdges")]
        [XmlAttributeAttribute(true)]
        [ConstantAttribute()]
        public virtual IOrderedSetExpression<IEMoflonEdge> TranslatedEdges
        {
            get
            {
                return this._translatedEdges;
            }
        }
        
        /// <summary>
        /// Gets the referenced model elements of this model element
        /// </summary>
        public override IEnumerableExpression<IModelElement> ReferencedElements
        {
            get
            {
                return base.ReferencedElements.Concat(new PerformRuleResultReferencedElementsCollection(this));
            }
        }
        
        /// <summary>
        /// Gets the Class model for this type
        /// </summary>
        public new static IClass ClassInstance
        {
            get
            {
                if ((_classInstance == null))
                {
                    _classInstance = ((IClass)(MetaRepository.Instance.Resolve("platform:/plugin/org.moflon.tgg.runtime/model/Runtime.ecore#//PerformRuleResult/")));
                }
                return _classInstance;
            }
        }
        
        /// <summary>
        /// Forwards CollectionChanging notifications for the TranslatedElements property to the parent model element
        /// </summary>
        /// <param name="sender">The collection that raised the change</param>
        /// <param name="e">The original event data</param>
        private void TranslatedElementsCollectionChanging(object sender, NMF.Collections.ObjectModel.NotifyCollectionChangingEventArgs e)
        {
            this.OnCollectionChanging("TranslatedElements", e);
        }
        
        /// <summary>
        /// Forwards CollectionChanged notifications for the TranslatedElements property to the parent model element
        /// </summary>
        /// <param name="sender">The collection that raised the change</param>
        /// <param name="e">The original event data</param>
        private void TranslatedElementsCollectionChanged(object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
        {
            this.OnCollectionChanged("TranslatedElements", e);
        }
        
        /// <summary>
        /// Forwards CollectionChanging notifications for the CreatedElements property to the parent model element
        /// </summary>
        /// <param name="sender">The collection that raised the change</param>
        /// <param name="e">The original event data</param>
        private void CreatedElementsCollectionChanging(object sender, NMF.Collections.ObjectModel.NotifyCollectionChangingEventArgs e)
        {
            this.OnCollectionChanging("CreatedElements", e);
        }
        
        /// <summary>
        /// Forwards CollectionChanged notifications for the CreatedElements property to the parent model element
        /// </summary>
        /// <param name="sender">The collection that raised the change</param>
        /// <param name="e">The original event data</param>
        private void CreatedElementsCollectionChanged(object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
        {
            this.OnCollectionChanged("CreatedElements", e);
        }
        
        /// <summary>
        /// Forwards CollectionChanging notifications for the CreatedLinkElements property to the parent model element
        /// </summary>
        /// <param name="sender">The collection that raised the change</param>
        /// <param name="e">The original event data</param>
        private void CreatedLinkElementsCollectionChanging(object sender, NMF.Collections.ObjectModel.NotifyCollectionChangingEventArgs e)
        {
            this.OnCollectionChanging("CreatedLinkElements", e);
        }
        
        /// <summary>
        /// Forwards CollectionChanged notifications for the CreatedLinkElements property to the parent model element
        /// </summary>
        /// <param name="sender">The collection that raised the change</param>
        /// <param name="e">The original event data</param>
        private void CreatedLinkElementsCollectionChanged(object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
        {
            this.OnCollectionChanged("CreatedLinkElements", e);
        }
        
        /// <summary>
        /// Forwards CollectionChanging notifications for the CreatedEdges property to the parent model element
        /// </summary>
        /// <param name="sender">The collection that raised the change</param>
        /// <param name="e">The original event data</param>
        private void CreatedEdgesCollectionChanging(object sender, NMF.Collections.ObjectModel.NotifyCollectionChangingEventArgs e)
        {
            this.OnCollectionChanging("CreatedEdges", e);
        }
        
        /// <summary>
        /// Forwards CollectionChanged notifications for the CreatedEdges property to the parent model element
        /// </summary>
        /// <param name="sender">The collection that raised the change</param>
        /// <param name="e">The original event data</param>
        private void CreatedEdgesCollectionChanged(object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
        {
            this.OnCollectionChanged("CreatedEdges", e);
        }
        
        /// <summary>
        /// Forwards CollectionChanging notifications for the TranslatedEdges property to the parent model element
        /// </summary>
        /// <param name="sender">The collection that raised the change</param>
        /// <param name="e">The original event data</param>
        private void TranslatedEdgesCollectionChanging(object sender, NMF.Collections.ObjectModel.NotifyCollectionChangingEventArgs e)
        {
            this.OnCollectionChanging("TranslatedEdges", e);
        }
        
        /// <summary>
        /// Forwards CollectionChanged notifications for the TranslatedEdges property to the parent model element
        /// </summary>
        /// <param name="sender">The collection that raised the change</param>
        /// <param name="e">The original event data</param>
        private void TranslatedEdgesCollectionChanged(object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
        {
            this.OnCollectionChanged("TranslatedEdges", e);
        }
        
        /// <summary>
        /// Gets the Model element collection for the given feature
        /// </summary>
        /// <returns>A non-generic list of elements</returns>
        /// <param name="feature">The requested feature</param>
        protected override System.Collections.IList GetCollectionForFeature(string feature)
        {
            if ((feature == "TRANSLATEDELEMENTS"))
            {
                return this._translatedElements;
            }
            if ((feature == "CREATEDELEMENTS"))
            {
                return this._createdElements;
            }
            if ((feature == "CREATEDLINKELEMENTS"))
            {
                return this._createdLinkElements;
            }
            if ((feature == "CREATEDEDGES"))
            {
                return this._createdEdges;
            }
            if ((feature == "TRANSLATEDEDGES"))
            {
                return this._translatedEdges;
            }
            return base.GetCollectionForFeature(feature);
        }
        
        /// <summary>
        /// Gets the Class for this model element
        /// </summary>
        public override IClass GetClass()
        {
            if ((_classInstance == null))
            {
                _classInstance = ((IClass)(MetaRepository.Instance.Resolve("platform:/plugin/org.moflon.tgg.runtime/model/Runtime.ecore#//PerformRuleResult/")));
            }
            return _classInstance;
        }
        
        /// <summary>
        /// The collection class to to represent the children of the PerformRuleResult class
        /// </summary>
        public class PerformRuleResultReferencedElementsCollection : ReferenceCollection, ICollectionExpression<IModelElement>, ICollection<IModelElement>
        {
            
            private PerformRuleResult _parent;
            
            /// <summary>
            /// Creates a new instance
            /// </summary>
            public PerformRuleResultReferencedElementsCollection(PerformRuleResult parent)
            {
                this._parent = parent;
            }
            
            /// <summary>
            /// Gets the amount of elements contained in this collection
            /// </summary>
            public override int Count
            {
                get
                {
                    int count = 0;
                    count = (count + this._parent.TranslatedElements.Count);
                    count = (count + this._parent.CreatedElements.Count);
                    count = (count + this._parent.CreatedLinkElements.Count);
                    count = (count + this._parent.CreatedEdges.Count);
                    count = (count + this._parent.TranslatedEdges.Count);
                    return count;
                }
            }
            
            protected override void AttachCore()
            {
                this._parent.TranslatedElements.AsNotifiable().CollectionChanged += this.PropagateCollectionChanges;
                this._parent.CreatedElements.AsNotifiable().CollectionChanged += this.PropagateCollectionChanges;
                this._parent.CreatedLinkElements.AsNotifiable().CollectionChanged += this.PropagateCollectionChanges;
                this._parent.CreatedEdges.AsNotifiable().CollectionChanged += this.PropagateCollectionChanges;
                this._parent.TranslatedEdges.AsNotifiable().CollectionChanged += this.PropagateCollectionChanges;
            }
            
            protected override void DetachCore()
            {
                this._parent.TranslatedElements.AsNotifiable().CollectionChanged -= this.PropagateCollectionChanges;
                this._parent.CreatedElements.AsNotifiable().CollectionChanged -= this.PropagateCollectionChanges;
                this._parent.CreatedLinkElements.AsNotifiable().CollectionChanged -= this.PropagateCollectionChanges;
                this._parent.CreatedEdges.AsNotifiable().CollectionChanged -= this.PropagateCollectionChanges;
                this._parent.TranslatedEdges.AsNotifiable().CollectionChanged -= this.PropagateCollectionChanges;
            }
            
            /// <summary>
            /// Adds the given element to the collection
            /// </summary>
            /// <param name="item">The item to add</param>
            public override void Add(IModelElement item)
            {
                this._parent.TranslatedElements.Add(item);
            }
            
            /// <summary>
            /// Clears the collection and resets all references that implement it.
            /// </summary>
            public override void Clear()
            {
                this._parent.TranslatedElements.Clear();
                this._parent.CreatedElements.Clear();
                this._parent.CreatedLinkElements.Clear();
                this._parent.CreatedEdges.Clear();
                this._parent.TranslatedEdges.Clear();
            }
            
            /// <summary>
            /// Gets a value indicating whether the given element is contained in the collection
            /// </summary>
            /// <returns>True, if it is contained, otherwise False</returns>
            /// <param name="item">The item that should be looked out for</param>
            public override bool Contains(IModelElement item)
            {
                if (this._parent.TranslatedElements.Contains(item))
                {
                    return true;
                }
                if (this._parent.CreatedElements.Contains(item))
                {
                    return true;
                }
                if (this._parent.CreatedLinkElements.Contains(item))
                {
                    return true;
                }
                if (this._parent.CreatedEdges.Contains(item))
                {
                    return true;
                }
                if (this._parent.TranslatedEdges.Contains(item))
                {
                    return true;
                }
                return false;
            }
            
            /// <summary>
            /// Copies the contents of the collection to the given array starting from the given array index
            /// </summary>
            /// <param name="array">The array in which the elements should be copied</param>
            /// <param name="arrayIndex">The starting index</param>
            public override void CopyTo(IModelElement[] array, int arrayIndex)
            {
                this._parent.TranslatedElements.CopyTo(array, arrayIndex);
                arrayIndex = (arrayIndex + this._parent.TranslatedElements.Count);
                this._parent.CreatedElements.CopyTo(array, arrayIndex);
                arrayIndex = (arrayIndex + this._parent.CreatedElements.Count);
                this._parent.CreatedLinkElements.CopyTo(array, arrayIndex);
                arrayIndex = (arrayIndex + this._parent.CreatedLinkElements.Count);
                IEnumerator<IModelElement> createdEdgesEnumerator = this._parent.CreatedEdges.GetEnumerator();
                try
                {
                    for (
                    ; createdEdgesEnumerator.MoveNext(); 
                    )
                    {
                        array[arrayIndex] = createdEdgesEnumerator.Current;
                        arrayIndex = (arrayIndex + 1);
                    }
                }
                finally
                {
                    createdEdgesEnumerator.Dispose();
                }
                IEnumerator<IModelElement> translatedEdgesEnumerator = this._parent.TranslatedEdges.GetEnumerator();
                try
                {
                    for (
                    ; translatedEdgesEnumerator.MoveNext(); 
                    )
                    {
                        array[arrayIndex] = translatedEdgesEnumerator.Current;
                        arrayIndex = (arrayIndex + 1);
                    }
                }
                finally
                {
                    translatedEdgesEnumerator.Dispose();
                }
            }
            
            /// <summary>
            /// Removes the given item from the collection
            /// </summary>
            /// <returns>True, if the item was removed, otherwise False</returns>
            /// <param name="item">The item that should be removed</param>
            public override bool Remove(IModelElement item)
            {
                if (this._parent.TranslatedElements.Remove(item))
                {
                    return true;
                }
                if (this._parent.CreatedElements.Remove(item))
                {
                    return true;
                }
                if (this._parent.CreatedLinkElements.Remove(item))
                {
                    return true;
                }
                IEMoflonEdge eMoflonEdgeItem = item.As<IEMoflonEdge>();
                if (((eMoflonEdgeItem != null) 
                            && this._parent.CreatedEdges.Remove(eMoflonEdgeItem)))
                {
                    return true;
                }
                if (((eMoflonEdgeItem != null) 
                            && this._parent.TranslatedEdges.Remove(eMoflonEdgeItem)))
                {
                    return true;
                }
                return false;
            }
            
            /// <summary>
            /// Gets an enumerator that enumerates the collection
            /// </summary>
            /// <returns>A generic enumerator</returns>
            public override IEnumerator<IModelElement> GetEnumerator()
            {
                return Enumerable.Empty<IModelElement>().Concat(this._parent.TranslatedElements).Concat(this._parent.CreatedElements).Concat(this._parent.CreatedLinkElements).Concat(this._parent.CreatedEdges).Concat(this._parent.TranslatedEdges).GetEnumerator();
            }
        }
    }
}

